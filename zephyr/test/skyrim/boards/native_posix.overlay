/* Copyright 2023 The ChromiumOS Authors
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 */

#include <board-overlays/native_posix.dts>
#include <dt-bindings/gpio_defines.h>

/ {
	/* GPIOs shared by all boards */
	named-gpios {
		compatible = "named-gpios";

		gpio_pg_pwr_s5: pg_pwr_s5 {
			gpios = <&gpio0 0 GPIO_INPUT>;
			enum-name = "GPIO_S5_PGOOD";
		};

		gpio_usb_c0_tcpc_fastsw_ctl_en: usb_c0_tcpc_fastsw_ctl_en {
			gpios = <&gpio0 1 GPIO_OUTPUT_LOW>;
			enum-name = "IOEX_USB_C0_TCPC_FASTSW_CTL_EN";
		};

		gpio_usb_c1_tcpc_fastsw_ctl_en: usb_c1_tcpc_fastsw_ctl_en {
			gpios = <&gpio0 2 GPIO_OUTPUT_LOW>;
			enum-name = "IOEX_USB_C1_TCPC_FASTSW_CTL_EN";
		};

		gpio_usb_c0_ppc_int_odl: usb_c0_ppc_int_odl {
			gpios = <&gpio0 3 GPIO_INPUT>;
			enum-name = "GPIO_USB_C0_PPC_INT_ODL";
		};
		gpio_usb_c1_ppc_int_odl: usb_c1_ppc_int_odl {
			gpios = <&gpio0 4 GPIO_INPUT>;
			enum-name = "GPIO_USB_C1_PPC_INT_ODL";
		};

		ioex_usb_c0_ilim_3a_en: usb_c0_ppc_ilim_3a_en {
			gpios = <&gpio0 5 GPIO_OUTPUT_LOW>;
			enum-name = "IOEX_USB_C0_PPC_ILIM_3A_EN";
		};

		gpio_usb_c1_in_hpd: usb_c1_in_hpd {
			gpios = <&gpio0 6 GPIO_OUTPUT_LOW>;
			enum-name = "IOEX_USB_C1_HPD_IN_DB";
		};

		ioex_usb_c1_sbu_flip: usb_c1_sbu_flip {
			gpios = <&gpio0 7 GPIO_OUTPUT_LOW>;
			enum-name = "IOEX_USB_C1_SBU_FLIP";
		};

		ioex_usb_c0_sbu_flip: usb_c0_sbu_flip {
			gpios = <&gpio0 8 GPIO_OUTPUT_LOW>;
			enum-name = "IOEX_USB_C0_SBU_FLIP";
		};

		gpio_accel_gyro_int_l: accel_gyro_int_l {
			gpios = <&gpio0 9 GPIO_INPUT>;
		};

		tablet_mode_l: tablet_mode_l {
			gpios = <&gpio0 11 GPIO_INPUT>;
			enum-name = "GPIO_TABLET_MODE_L";
		};
	};

	gpio-interrupts {
		compatible = "cros-ec,gpio-interrupts";

		int_accel_gyro: accel_gyro {
			irq-pin = <&gpio_accel_gyro_int_l>;
			flags = <GPIO_INT_EDGE_FALLING>;
			handler = "bmi3xx_interrupt";
		};
	};

	skyrim-fw-config {
		compatible = "cros-ec,cbi-fw-config";

		form-factor {
			enum-name = "FW_FORM_FACTOR";
			start = <0>;
			size = <1>;

			ff-clamshell {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_FF_CLAMSHELL";
				value = <0>;
			};
			ff-convertible {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_FF_CONVERTIBLE";
				value = <1>;
				default;
			};
		};

		io-db {
			enum-name = "FW_IO_DB";
			start = <6>;
			size = <2>;

			io-db-ps8811-ps8818 {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_IO_DB_PS8811_PS8818";
				value = <0>;
			};
			io-db-none-anx7483 {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_IO_DB_NONE_ANX7483";
				value = <1>;
				default;
			};
		};

		fan {
			enum-name = "FW_FAN";
			start = <10>;
			size = <1>;

			no-fan {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_FAN_NOT_PRESENT";
				value = <0>;
			};
			fan-present {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_FAN_PRESENT";
				value = <1>;
				/*
				 * Set as default so that unprovisioned
				 * configs will run the fan regardless.
				 */
				default;
			};
		};

		charger-option {
			enum-name = "FW_CHARGER";
			start = <11>;
			size = <2>;

			charger-option-isl9241 {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_CHARGER_ISL9241";
				value = <0>;
				default;
			};
			charger-option-isl9538 {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_CHARGER_ISL9538";
				value = <1>;
			};
		};
	};

	named-i2c-ports {
		compatible = "named-i2c-ports";

		eeprom {
			i2c-port = <&i2c0>;
			enum-names = "I2C_PORT_EEPROM";
		};

		i2c_sensor: sensor {
			i2c-port = <&i2c0>;
			enum-names = "I2C_PORT_SENSOR";
		};

	};
};

&gpio0 {
	ngpios = <23>;
};
