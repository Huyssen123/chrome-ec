/* Copyright 2021 The Chromium OS Authors. All rights reserved.
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 */

#include <dt-bindings/gpio_defines.h>

/ {
	named-gpios {
		compatible = "named-gpios";

		ec_batt_pres_odl {
			gpios = <&gpio0 1 GPIO_INPUT>;
			enum-name = "GPIO_BATT_PRES_ODL";
			label = "EC_BATT_PRES_ODL";
		};
		acok_od {
			gpios = <&gpio0 2 GPIO_INPUT>;
			enum-name = "GPIO_AC_PRESENT";
			label = "ACOK_OD";
		};
		/* In test WP is output because CBI use it, but it is also
		 * input, because test_all_tags set it to enable write
		 * protection.
		 */
		gpio_wp_l: wp_l {
			#gpio-cells = <0>;
			gpios = <&gpio0 3 (GPIO_INPUT | GPIO_OUTPUT)>;
			enum-name = "GPIO_WP_L";
			label = "WP_L";
		};
		pg_ec_dsw_pwrok {
			gpios = <&gpio0 4 GPIO_INPUT>;
			enum-name = "GPIO_PG_EC_DSW_PWROK";
			label = "PG_EC_DSW_PWROK";
		};
	};
	named-i2c-ports {
		compatible = "named-i2c-ports";

		usb-c0 {
			i2c-port = <&i2c0>;
			enum-name = "I2C_PORT_USB_C0";
			label = "USB_C0";
		};
		usb-c1 {
			i2c-port = <&i2c0>;
			enum-name = "I2C_PORT_USB_C1";
			label = "USB_C1";
		};
		battery {
			i2c-port = <&i2c0>;
			enum-name = "I2C_PORT_BATTERY";
			label = "BATTERY";
		};
		charger {
			i2c-port = <&i2c0>;
			enum-name = "I2C_PORT_CHARGER";
			label = "CHARGER";
		};
		eeprom {
			i2c-port = <&i2c0>;
			enum-name = "I2C_PORT_EEPROM";
			label = "EEPROM";
		};
		accel {
			i2c-port = <&i2c0>;
			enum-name = "I2C_PORT_ACCEL";
			label = "ACCEL";
		};
	};

	named-batteries {
		compatible = "named-batteries";

		lgc011 {
			enum-name = "lgc011";
		};
	};

	adc0: adc {
		compatible = "zephyr,adc-emul";
		nchannels = <4>;
		ref-internal-mv = <3300>;
		#io-channel-cells = <1>;
		label = "ADC_0";
		status = "okay";
	};

	named-adc-channels {
		compatible = "named-adc-channels";

		adc_charger: charger {
			label = "ADC_TEMP_SENSOR_CHARGER";
			enum-name = "ADC_TEMP_SENSOR_CHARGER";
			channel = <0>;
		};
		adc_pp3300_regulator: pp3300-regulator {
			label = "ADC_TEMP_SENSOR_PP3300_REGULATOR";
			enum-name = "ADC_TEMP_SENSOR_PP3300_REGULATOR";
			channel = <1>;
		};
		adc_ddr_soc: ddr-soc {
			label = "ADC_TEMP_SENSOR_DDR_SOC";
			enum-name = "ADC_TEMP_SENSOR_DDR_SOC";
			channel = <2>;
		};
		adc_fan: fan {
			label = "ADC_TEMP_SENSOR_FAN";
			enum-name = "ADC_TEMP_SENSOR_FAN";
			channel = <3>;
		};
	};

	named-temp-sensors {
		charger {
			compatible = "temp-3v3-13k7-47k-4050b";
			label = "TEMP_SENSOR_CHARGER";
			enum-name = "TEMP_SENSOR_CHARGER";
			temp_fan_off = <40>;
			temp_fan_max = <55>;
			temp_host_high = <75>;
			temp_host_halt = <80>;
			temp_host_release_high = <65>;
			adc = <&adc_charger>;
		};
		pp3300-regulator {
			compatible = "temp-3v3-30k9-47k-4050b";
			label = "TEMP_SENSOR_PP3300_REGULATOR";
			enum-name = "TEMP_SENSOR_PP3300_REGULATOR";
			temp_fan_off = <40>;
			temp_fan_max = <55>;
			temp_host_high = <75>;
			temp_host_halt = <80>;
			temp_host_release_high = <65>;
			adc = <&adc_pp3300_regulator>;
		};
		ddr-soc {
			compatible = "temp-3v3-51k1-47k-4050b";
			label = "TEMP_SENSOR_DDR_SOC";
			enum-name = "TEMP_SENSOR_DDR_SOC";
			temp_fan_off = <35>;
			temp_fan_max = <50>;
			temp_host_high = <70>;
			temp_host_halt = <80>;
			temp_host_release_high = <65>;
			adc = <&adc_ddr_soc>;
		};
		fan {
			compatible = "temp-3v0-22k6-47k-4050b";
			label = "TEMP_SENSOR_FAN";
			enum-name = "TEMP_SENSOR_FAN";
			temp_fan_off = <35>;
			temp_fan_max = <50>;
			temp_host_high = <70>;
			temp_host_halt = <80>;
			temp_host_release_high = <65>;
			adc = <&adc_fan>;
		};
	};
};

&gpio0 {
	ngpios = <5>;
};

&i2c0 {
	cbi_eeprom: eeprom@56 {
		compatible = "atmel,at24";
		reg = <0x56>;
		label = "EEPROM_CBI";
		size = <512>;
		pagesize = <8>;
		address-width = <8>;
		timeout = <5>;
		wp-gpios = <&gpio_wp_l>;
	};

	battery: sb@b {
		compatible = "zephyr,smart-battery";
		reg = <0xb>;
		label = "BATTERY";
		cycle-count = <99>;
		version = "BATTERY_SPEC_VER_1_1_WITH_PEC";
	};

	bma_emul: bma@18 {
		compatible = "zephyr,bma255";
		reg = <0x18>;
		label = "BMA_EMUL";
		error-on-compensation-not-ready;
		error-on-ro-write;
		error-on-reserved-bit-write;
		error-on-msb-first-access;
	};

	pi3usb9201_emul: pi3usb9201@5f {
		compatible = "zephyr,pi3usb9201-emul";
		reg = <0x5f>;
		label = "PI3USB9201_EMUL";
	};

	syv682x_emul: syv682x@41 {
		compatible = "zephyr,syv682x-emul";
		reg = <0x41>;
		label = "SYV682X_EMUL";
	};
};
