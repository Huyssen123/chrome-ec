# Copyright 2021 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# EC chip configuration: IT83102
CONFIG_BOARD_NEREID=y
CONFIG_CROS_FLASH_IT8XXX2=y
CONFIG_CROS_SYSTEM_IT8XXX2=y

# AP override: IT8xxx2 host interface is not yet supported
# TODO(b:211772002) enable AP
CONFIG_AP=n
CONFIG_ESPI=n

# Sensor drivers
CONFIG_PLATFORM_EC_ACCELGYRO_BMI_COMM_I2C=y
CONFIG_PLATFORM_EC_ACCELGYRO_BMI3XX=y
CONFIG_PLATFORM_EC_ACCEL_BMA4XX=y

# Keyboard - disabled until host interface is available (b:211772002)
CONFIG_CROS_KB_RAW_ITE=n
CONFIG_PLATFORM_EC_KEYBOARD=n

# TCPC+PPC: ITE on-chip for C0, PS8745 for optional C1
CONFIG_PLATFORM_EC_USB_PD_TCPM_ITE_ON_CHIP=y
CONFIG_PLATFORM_EC_USB_PD_TCPM_DRIVER_IT8XXX2=y
CONFIG_PLATFORM_EC_USB_PD_TCPM_PS8815=y
CONFIG_PLATFORM_EC_USB_PD_VBUS_DETECT_CHARGER=y
# SM5803 controls power path on both ports
CONFIG_PLATFORM_EC_USB_PD_5V_CHARGER_CTRL=y
# SM5803 can discharge VBUS, but not via one of the available options;
# pd_power_supply_reset() does discharge.
CONFIG_PLATFORM_EC_USB_PD_DISCHARGE=n
# The EC is put into programming mode while firmware is running
# (after releasing reset) and PD after being reset will hard-reset
# the port if a contract was already set up. If the system has no
# battery, this will prevent programming because it will brown out
# the system and reset. Inserting a delay gives the programmer more
# time to put the EC into programming mode.
CONFIG_PLATFORM_EC_USB_PD_STARTUP_DELAY_MS=2000

# Charger driver and configuration
CONFIG_PLATFORM_EC_CHARGER_SM5803=y
CONFIG_PLATFORM_EC_OCPC_DEF_RBATT_MOHMS=21
