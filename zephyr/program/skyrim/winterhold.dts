/* Copyright 2021 The ChromiumOS Authors
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 */

#include <dt-bindings/usbc_mux.h>

#include "i2c_common.dtsi"

/ {
	named-gpios {
		/* Winterhold-specific GPIO customizations */
	};

	named-temp-sensors {
		compatible = "cros-ec,temp-sensors";
		soc-pct2075 {
			temp_host_high = <105>;
			temp_host_halt = <110>;
			temp_host_release_high = <95>;
			temp_host_release_halt = <100>;
			power-good-pin = <&gpio_pg_pwr_s5>;
			sensor = <&soc_pct2075>;
		};
		amb-pct2075 {
			temp_host_warn = <50>;
			temp_host_high = <105>;
			temp_host_halt = <110>;
			temp_host_release_warn = <45>;
			temp_host_release_high = <95>;
			temp_host_release_halt = <100>;
			temp_fan_off = <35>;
			temp_fan_max = <40>;
			power-good-pin = <&gpio_pg_pwr_s5>;
			sensor = <&amb_pct2075>;
		};
	};

	/*
	 * Note this is expected to vary per-board, so we keep it in the board
	 * dts files.
	 */
	Winterhold-fw-config {
		compatible = "cros-ec,cbi-fw-config";

		/*
		 * FW_CONFIG field to enable KB back light or not.
		 */
		kb-bl {
			enum-name = "FW_KB_BL";
			start = <1>;
			size = <1>;

			no-kb-bl {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_KB_BL_NOT_PRESENT";
				value = <0>;
			};
			kb-bl-present {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_KB_BL_PRESENT";
				value = <1>;
			};
		};
	};

	/* Rotation matrices for motion sensors. */
	motionsense-rotation-ref {
		compatible = "cros-ec,motionsense-rotation-ref";
		lid_rot_ref: lid-rotation-ref {
			mat33 = <0 (-1) 0
				 1 0 0
				 0 0 1>;
		};

		base_rot_ref: base-rotation-ref {
			mat33 = <0 1 0
				 (-1) 0 0
				 0 0 1>;
		};
	};
};

&i2c0_0 {
	anx7483_port0: anx7483@3e {
		compatible = "analogix,anx7483";
		reg = <0x3e>;
		board-set = "board_anx7483_c0_mux_set";
		flags = <USB_MUX_FLAG_RESETS_IN_G3>;
	};
	ppc_port0: nx20p348x@71 {
		compatible = "nxp,nx20p348x";
		status = "okay";
		reg = <0x71>;
	};
};

&i2c1_0 {
	anx7483_port1: anx7483@3e {
		compatible = "analogix,anx7483";
		reg = <0x3e>;
		board-set = "board_anx7483_c1_mux_set";
		flags = <USB_MUX_FLAG_RESETS_IN_G3>;
	};
	ppc_port1: nx20p348x@71 {
		compatible = "nxp,nx20p348x";
		status = "okay";
		reg = <0x71>;
	};
};

&i2c4_1 {
	charger: isl9238@9 {
		compatible = "intersil,isl923x";
		status = "okay";
		reg = <0x9>;
	};
};

&usbc_port0 {
	ppc = <&ppc_port0>;
	usb-mux-chain-0 {
		compatible = "cros-ec,usb-mux-chain";
		usb-muxes = <&amd_fp6_port0 &anx7483_port0>;
	};
};

&usbc_port1 {
	ppc = <&ppc_port1>;
	usb-mux-chain-1-anx {
		compatible = "cros-ec,usb-mux-chain";
		usb-muxes = <&amd_fp6_port1 &anx7483_port1>;
	};
};

&fan0 {
	pwms = <&pwm0 0 PWM_KHZ(2) PWM_POLARITY_NORMAL>;
	rpm_min = <2100>;
	rpm_start = <2600>;
	rpm_max = <4800>;
};

&temp_sensor_charger {
	temp_host_high = <100>;
	temp_host_halt = <110>;
	temp_host_release_high = <90>;
	temp_host_release_halt = <100>;
};

&temp_sensor_memory {
	temp_host_high = <91>;
	temp_host_halt = <96>;
	temp_host_release_high = <81>;
	temp_host_release_halt = <86>;
};

&temp_sensor_cpu {
	/delete-property/ temp_host_high;
	/delete-property/ temp_host_halt;
	/delete-property/ temp_host_release_high;
	/delete-property/ temp_fan_off;
	/delete-property/ temp_fan_max;
};

/* Override handler */
&int_accel_gyro {
	handler = "base_accel_interrupt";
};
