/* -*- mode:c -*-
 *
 * Copyright 2022 The ChromiumOS Authors
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 */

/*
 * List of all GPIO pins available for Host computer to manipulate.
 * The are named based on their location on the two 70-pin DIL
 * connectors on either side of the HyperDebug board.  Pins with
 * special functions are commented out, and declared with relevant
 * symbolic name further below.
 */
GPIO(CN11_1,			PIN(C, 10), GPIO_INPUT)
GPIO(CN11_2,			PIN(C, 11), GPIO_INPUT)
GPIO(CN11_3,			PIN(C, 12), GPIO_INPUT)
GPIO(CN11_4,			PIN(D, 2), GPIO_INPUT)
GPIO(CN11_7,			PIN(H, 3), GPIO_INPUT)
GPIO(CN11_9,			PIN(F, 6), GPIO_INPUT)
GPIO(CN11_11,			PIN(F, 7), GPIO_INPUT)
/*GPIO(CN11_13,			PIN(A, 13), GPIO_INPUT)	SWDIO */
/*GPIO(CN11_15,			PIN(A, 14), GPIO_INPUT)	SWCLK */
GPIO(CN11_17,			PIN(A, 15), GPIO_INPUT)
/*GPIO(CN11_21,			PIN(B, 7), GPIO_INPUT) Nucleo LED */
GPIO(CN11_23,			PIN(C, 13), GPIO_INPUT)
GPIO(CN11_25,			PIN(C, 14), GPIO_INPUT)
GPIO(CN11_27,			PIN(C, 15), GPIO_INPUT)
/*GPIO(CN11_28,			PIN(A, 0), GPIO_INPUT) UART4 */
GPIO(CN11_29,			PIN(H, 0), GPIO_INPUT)
/*GPIO(CN11_30,			PIN(A, 1), GPIO_INPUT) UART4 */
GPIO(CN11_31,			PIN(H, 1), GPIO_INPUT)
/*GPIO(CN11_32,			PIN(A, 4), GPIO_INPUT) USB CC */
GPIO(CN11_34,			PIN(B, 0), GPIO_INPUT)
/*GPIO(CN11_35,			PIN(C, 2), GPIO_INPUT) SPI2 */
GPIO(CN11_36,			PIN(C, 1), GPIO_INPUT)
/*GPIO(CN11_37,			PIN(C, 3), GPIO_INPUT) SPI2 */
GPIO(CN11_38,			PIN(C, 0), GPIO_INPUT)
GPIO(CN11_39,			PIN(D, 4), GPIO_INPUT)
GPIO(CN11_40,			PIN(D, 3), GPIO_INPUT)
GPIO(CN11_41,			PIN(D, 5), GPIO_INPUT)
GPIO(CN11_42,			PIN(G, 2), GPIO_INPUT)
GPIO(CN11_43,			PIN(D, 6), GPIO_INPUT)
GPIO(CN11_44,			PIN(G, 3), GPIO_INPUT)
GPIO(CN11_45,			PIN(D, 7), GPIO_INPUT)
GPIO(CN11_46,			PIN(E, 2), GPIO_INPUT)
GPIO(CN11_47,			PIN(E, 3), GPIO_INPUT)
GPIO(CN11_48,			PIN(E, 4), GPIO_INPUT)
GPIO(CN11_50,			PIN(E, 5), GPIO_INPUT)
GPIO(CN11_51,			PIN(F, 1), GPIO_INPUT)
GPIO(CN11_52,			PIN(F, 2), GPIO_INPUT)
GPIO(CN11_53,			PIN(F, 0), GPIO_INPUT)
GPIO(CN11_54,			PIN(F, 8), GPIO_INPUT)
/*GPIO(CN11_55,			PIN(D, 1), GPIO_INPUT) SPI2 */
GPIO(CN11_56,			PIN(F, 9), GPIO_INPUT)
/*GPIO(CN11_57,			PIN(D, 0), GPIO_INPUT) SPI2 */
GPIO(CN11_58,			PIN(G, 1), GPIO_INPUT)
GPIO(CN11_59,			PIN(G, 0), GPIO_INPUT)
/*GPIO(CN11_61,			PIN(E, 1), GPIO_INPUT) */
GPIO(CN11_62,			PIN(E, 6), GPIO_INPUT)
/*GPIO(CN11_63,			PIN(G, 9), GPIO_INPUT) UART1 */
GPIO(CN11_64,			PIN(G, 15), GPIO_INPUT)
GPIO(CN11_65,			PIN(G, 12), GPIO_INPUT)
/*GPIO(CN11_66,			PIN(G, 10), GPIO_INPUT) UART1 */
/*GPIO(CN11_68,			PIN(G, 13), GPIO_INPUT) I2C1 */
/*GPIO(CN11_69,			PIN(D, 9), GPIO_INPUT) UART3 */
GPIO(CN12_1,			PIN(C, 9), GPIO_INPUT)
GPIO(CN12_2,			PIN(C, 8), GPIO_INPUT)
GPIO(CN12_3,			PIN(B, 8), GPIO_INPUT)
GPIO(CN12_4,			PIN(C, 6), GPIO_INPUT)
GPIO(CN12_5,			PIN(B, 9), GPIO_INPUT)
/*GPIO(CN12_10,			PIN(D, 8), GPIO_INPUT) UART3 */
/*GPIO(CN12_11,			PIN(A, 5), GPIO_INPUT) USB CC */
/*GPIO(CN12_12,			PIN(A, 12), GPIO_INPUT) USB */
GPIO(CN12_13,			PIN(A, 6), GPIO_INPUT)
/*GPIO(CN12_14,			PIN(A, 11), GPIO_INPUT) USB */
GPIO(CN12_15,			PIN(A, 7), GPIO_INPUT)
GPIO(CN12_17,			PIN(B, 6), GPIO_INPUT)
GPIO(CN12_18,			PIN(B, 11), GPIO_INPUT)
/*GPIO(CN12_19,			PIN(C, 7), GPIO_INPUT) Nucleo LED */
/*GPIO(CN12_21,			PIN(A, 9), GPIO_INPUT) Nucleo LED */
GPIO(CN12_22,			PIN(B, 2), GPIO_INPUT)
GPIO(CN12_23,			PIN(A, 8), GPIO_INPUT)
GPIO(CN12_24,			PIN(B, 1), GPIO_INPUT)
GPIO(CN12_25,			PIN(B, 10), GPIO_INPUT)
GPIO(CN12_26,			PIN(B, 15), GPIO_INPUT)
GPIO(CN12_27,			PIN(B, 4), GPIO_INPUT)
/*GPIO(CN12_28,			PIN(B, 14), GPIO_INPUT) I2C2 */
GPIO(CN12_29,			PIN(B, 5), GPIO_INPUT)
/*GPIO(CN12_30,			PIN(B, 13), GPIO_INPUT) I2C2 */
GPIO(CN12_31,			PIN(B, 3), GPIO_INPUT)
GPIO(CN12_33,			PIN(A, 10), GPIO_INPUT)
/*GPIO(CN12_35,			PIN(A, 2), GPIO_INPUT) UART2 */
GPIO(CN12_36,			PIN(F, 5), GPIO_INPUT)
/*GPIO(CN12_37,			PIN(A, 3), GPIO_INPUT) UART2 */
GPIO(CN12_38,			PIN(F, 4), GPIO_INPUT)
GPIO(CN12_40,			PIN(E, 8), GPIO_INPUT)
GPIO(CN12_41,			PIN(D, 13), GPIO_INPUT)
GPIO(CN12_42,			PIN(F, 10), GPIO_INPUT)
GPIO(CN12_43,			PIN(D, 12), GPIO_INPUT)
GPIO(CN12_44,			PIN(E, 7), GPIO_INPUT)
GPIO(CN12_45,			PIN(D, 11), GPIO_INPUT)
GPIO(CN12_46,			PIN(D, 14), GPIO_INPUT)
/*GPIO(CN12_47,			PIN(E, 10), GPIO_INPUT) */
GPIO(CN12_48,			PIN(D, 15), GPIO_INPUT)
/*GPIO(CN12_49,			PIN(E, 12), GPIO_INPUT) */
GPIO(CN12_50,			PIN(F, 14), GPIO_INPUT)
/*GPIO(CN12_51,			PIN(E, 14), GPIO_INPUT) */
GPIO(CN12_52,			PIN(E, 9), GPIO_INPUT)
/*GPIO(CN12_53,			PIN(E, 15), GPIO_INPUT) */
/*GPIO(CN12_55,			PIN(E, 13), GPIO_INPUT) */
/*GPIO(CN12_56,			PIN(E, 11), GPIO_INPUT) */
GPIO(CN12_57,			PIN(F, 13), GPIO_INPUT)
GPIO(CN12_58,			PIN(F, 3), GPIO_INPUT)
GPIO(CN12_59,			PIN(F, 12), GPIO_INPUT)
GPIO(CN12_60,			PIN(F, 15), GPIO_INPUT)
/*GPIO(CN12_61,			PIN(G, 14), GPIO_INPUT) I2C1 */
GPIO(CN12_62,			PIN(F, 11), GPIO_INPUT)
GPIO(CN12_64,			PIN(E, 0), GPIO_INPUT)
GPIO(CN12_65,			PIN(D, 10), GPIO_INPUT)
/*GPIO(CN12_66,			PIN(G, 8), GPIO_INPUT) LPUART */
/*GPIO(CN12_67,			PIN(G, 7), GPIO_INPUT) LPUART */
GPIO(CN12_68,			PIN(G, 5), GPIO_INPUT)
GPIO(CN12_69,			PIN(G, 4), GPIO_INPUT)
GPIO(CN12_70,			PIN(G, 6), GPIO_INPUT)

GPIO(POR_N,			PIN(E, 1), GPIO_INPUT)

GPIO(QSPI_DEV_CLK,		PIN(E, 10), GPIO_OUT_LOW)
GPIO(QSPI_DEV_CS_L,		PIN(E, 11), GPIO_OUT_LOW)
GPIO(QSPI_DEV_D0,		PIN(E, 12), GPIO_OUT_LOW)
GPIO(QSPI_DEV_D1,		PIN(E, 13), GPIO_OUT_LOW)
GPIO(QSPI_DEV_D2,		PIN(E, 14), GPIO_OUT_LOW)
GPIO(QSPI_DEV_D3,		PIN(E, 15), GPIO_OUT_LOW)

/* I2C pins should be configured as inputs until I2C module is    */
/* initialized. This will avoid driving the lines unintentionally.*/
GPIO(TPM_I2C1_HOST_SCL,		PIN(G, 14), GPIO_OUTPUT | GPIO_OPEN_DRAIN)
GPIO(TPM_I2C1_HOST_SDA,		PIN(G, 13), GPIO_OUTPUT | GPIO_OPEN_DRAIN)
GPIO(INA_I2C2_DEV_SCL,		PIN(B, 13), GPIO_ALTERNATE)
GPIO(INA_I2C2_DEV_SDA,		PIN(B, 14), GPIO_ALTERNATE)

/* These pins are used for USART and are set to alternate mode below */
GPIO(USART1_AP_TX,		PIN(G, 9),  GPIO_INPUT)
GPIO(USART1_AP_RX,		PIN(G, 10), GPIO_INPUT)
GPIO(USART2_OT_TX,		PIN(A, 2),  GPIO_INPUT)
GPIO(USART2_OT_RX,		PIN(A, 3),  GPIO_INPUT)
GPIO(USART3_FP_MCU_TX,		PIN(D, 8),  GPIO_INPUT)
GPIO(USART3_FP_MCU_RX,		PIN(D, 9),  GPIO_INPUT)
GPIO(USART4_EC_TX,		PIN(A, 0),  GPIO_INPUT)
GPIO(USART4_EC_RX,		PIN(A, 1),  GPIO_INPUT)
GPIO(LPUART1_HYPER_RX,		PIN(G, 7),  GPIO_INPUT)
GPIO(LPUART1_HYPER_TX,		PIN(G, 8),  GPIO_INPUT)

GPIO(SPI2_CS,			PIN(D, 0),  GPIO_OUT_HIGH)
GPIO(SPI2_SCK,			PIN(D, 1),  GPIO_ALTERNATE)
GPIO(SPI2_CIDO,			PIN(C, 2),  GPIO_ALTERNATE)
GPIO(SPI2_CODI,			PIN(C, 3),  GPIO_ALTERNATE)


/* USB pins */
GPIO(USB_FS_DM,			PIN(A, 11), GPIO_ALTERNATE)
GPIO(USB_FS_DP,			PIN(A, 12), GPIO_ALTERNATE)
GPIO(CC1,			PIN(A, 4), GPIO_ANALOG)
GPIO(CC2,			PIN(A, 5), GPIO_ANALOG)

/* Signals for hardware on the Nucleo board itself */
GPIO(NUCLEO_LED1,		PIN(C, 7), GPIO_OUT_HIGH) /* Green */
GPIO(NUCLEO_LED2,		PIN(B, 7), GPIO_OUT_LOW) /* Blue */
GPIO(NUCLEO_LED3,		PIN(A, 9), GPIO_OUT_LOW) /* Red */

/* Unimplemented signals since we are not an EC */
UNIMPLEMENTED(ENTERING_RW)
UNIMPLEMENTED(WP_L)


ALTERNATE(PIN_MASK(A, 0x1800), 10, MODULE_USB, 0) /* USB: PA11/12 */

ALTERNATE(PIN_MASK(G, 0x0600), 7, MODULE_UART, 0) /* USART1: PG09/PG10 - AP UART */
ALTERNATE(PIN_MASK(A, 0x000C), 7, MODULE_UART, 0) /* USART2: PA02/PA03 - OT UART */
ALTERNATE(PIN_MASK(D, 0x0300), 7, MODULE_UART, 0) /* USART3: PD08/PD09 - HyperDebug console */
ALTERNATE(PIN_MASK(A, 0x0003), 8, MODULE_UART, 0) /* USART4: PA00/PA01 - EC UART */
ALTERNATE(PIN_MASK(G, 0x0180), 8, MODULE_UART, 0) /* LPUART1: PG07/PG08 - FP MCU UART */

ALTERNATE(PIN_MASK(B, 0x6000), 4, MODULE_I2C, GPIO_OPEN_DRAIN) /* I2C2: PB13/14 */
ALTERNATE(PIN_MASK(G, 0x6000), 4, MODULE_I2C, GPIO_OPEN_DRAIN) /* I2C1: PG13/14 */
ALTERNATE(PIN_MASK(C, 0x0003), 4, MODULE_I2C, GPIO_OPEN_DRAIN) /* I2C3: PC00/01 */
/*ALTERNATE(PIN_MASK(E, 0xFC00), 10, MODULE_SPI_FLASH, 0) / * QSPI: PE10-15 */
/*ALTERNATE(PIN_MASK(D, 0x0001), 5, MODULE_SPI, 0) / * SPI2: PD00 CS */
ALTERNATE(PIN_MASK(D, 0x0002), 5, MODULE_SPI, 0) /* SPI2: PD01 SCK */
ALTERNATE(PIN_MASK(C, 0x000C), 5, MODULE_SPI, 0) /* SPI2: PC02/03 CIDO/DOCI */
